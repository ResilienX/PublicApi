openapi: 3.0.1
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  version: "1.0"
servers:
- url: /
tags:
- name: Library Components
  description: Component library access
- name: Library Faults
  description: Fault library access
- name: Library Images
  description: Image access operations
- name: Fault Entity
  description: Simple Jpa Repository
- name: Component State Chart
  description: Aggregation of all component status and faults
- name: Uptime Chart
  description: Uptime of the system
paths:
  /active/faults:
    get:
      tags:
      - Fault Entity
      summary: findAllFault
      operationId: findAllFaultUsingGET
      parameters:
      - name: page
        in: query
        description: page
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: sort
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /active/faults/search/deleteBySourceAndCode:
    get:
      tags:
      - Fault Entity
      summary: deleteBySourceAndCodeFault
      operationId: deleteBySourceAndCodeFaultUsingGET
      parameters:
      - name: code
        in: query
        description: code
        schema:
          type: string
      - name: source
        in: query
        description: source
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /active/faults/search/findBySourceAndCode:
    get:
      tags:
      - Fault Entity
      summary: findBySourceAndCodeFault
      operationId: findBySourceAndCodeFaultUsingGET
      parameters:
      - name: code
        in: query
        description: code
        schema:
          type: string
      - name: source
        in: query
        description: source
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /active/faults/search/findBySourceAndCodeAndSeverityLabel:
    get:
      tags:
      - Fault Entity
      summary: findBySourceAndCodeAndSeverityLabelFault
      operationId: findBySourceAndCodeAndSeverityLabelFaultUsingGET
      parameters:
      - name: code
        in: query
        description: code
        schema:
          type: string
      - name: severityLabel
        in: query
        description: severityLabel
        schema:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - UNKNOWN
      - name: source
        in: query
        description: source
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourcesOfFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /active/faults/{id}:
    get:
      tags:
      - Fault Entity
      summary: findByIdFault
      operationId: findByIdFaultUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceOfFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /library/components:
    get:
      tags:
      - Library Components
      summary: findAllLibraryComponent
      operationId: findAllLibraryComponentUsingGET
      parameters:
      - name: page
        in: query
        description: page
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: sort
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryComponent'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryComponent'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryComponent'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryComponent'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /library/components/{id}:
    get:
      tags:
      - Library Components
      summary: findByIdLibraryComponent
      operationId: findByIdLibraryComponentUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceOfLibraryComponent'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /library/faults:
    get:
      tags:
      - Library Faults
      summary: findAllLibraryFault
      operationId: findAllLibraryFaultUsingGET
      parameters:
      - name: page
        in: query
        description: page
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: sort
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryFault'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryFault'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryFault'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /library/faults/search/findByComponentLibraryNameAndErrorCode:
    get:
      tags:
      - Library Faults
      summary: findByComponentLibraryNameAndErrorCodeLibraryFault
      operationId: findByComponentLibraryNameAndErrorCodeLibraryFaultUsingGET
      parameters:
      - name: componentLibraryName
        in: query
        description: componentLibraryName
        schema:
          type: string
      - name: errorCode
        in: query
        description: errorCode
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourcesOfLibraryFault'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /library/images/{componentImageName}:
    get:
      tags:
      - Library Images
      summary: getPngFromLibrary
      operationId: getPngFromLibraryUsingGET
      parameters:
      - name: componentImageName
        in: path
        description: componentImageName
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: byte
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /charts/componentStateChart:
    get:
      tags:
      - Component State Chart
      summary: getComponentStatusChartData
      operationId: getComponentStatusChartDataUsingGET
      parameters:
      - name: endTime
        in: query
        description: endTime
        schema:
          type: string
          format: date-time
      - name: maxPoints
        in: query
        description: maxPoints
        schema:
          type: integer
          format: int32
      - name: startTime
        in: query
        description: startTime
        required: true
        schema:
          type: string
          format: date-time
      - name: unit
        in: query
        description: unit
        schema:
          type: string
          enum:
          - YEAR
          - MONTH
          - DAY
          - HOUR
          - MINUTE
          - SECOND
      - name: unitScalar
        in: query
        description: unitScalar
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComponentStateChartDataPoint'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /charts/uptime:
    get:
      tags:
      - Uptime Chart
      summary: getSystemUptime
      operationId: getSystemUptimeUsingGET
      parameters:
      - name: componentId
        in: query
        description: componentId
        schema:
          type: string
          format: uuid
      - name: endTime
        in: query
        description: endTime
        schema:
          type: string
          format: date-time
      - name: maxPoints
        in: query
        description: maxPoints
        schema:
          type: integer
          format: int32
      - name: startTime
        in: query
        description: startTime
        required: true
        schema:
          type: string
          format: date-time
      - name: unit
        in: query
        description: unit
        schema:
          type: string
          enum:
          - YEAR
          - MONTH
          - DAY
          - HOUR
          - MINUTE
          - SECOND
      - name: unitScalar
        in: query
        description: unitScalar
        schema:
          type: integer
          format: int32
      - name: valueType
        in: query
        description: valueType
        schema:
          type: string
          enum:
          - PERCENT
          - ABSOLUTE
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeValueChart'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
components:
  schemas:
    Link:
      title: Link
      type: object
      properties:
        deprecation:
          type: string
          xml:
            name: deprecation
            attribute: true
            wrapped: false
        href:
          type: string
          xml:
            name: href
            attribute: true
            wrapped: false
        hreflang:
          type: string
          xml:
            name: hreflang
            attribute: true
            wrapped: false
        media:
          type: string
          xml:
            name: media
            attribute: true
            wrapped: false
        rel:
          type: string
          xml:
            name: rel
            attribute: true
            wrapped: false
        templated:
          type: boolean
        title:
          type: string
          xml:
            name: title
            attribute: true
            wrapped: false
        type:
          type: string
          xml:
            name: type
            attribute: true
            wrapped: false
      xml:
        name: link
        namespace: http://www.w3.org/2005/Atom
        attribute: false
        wrapped: false
    EmbeddedCollectionOfFault:
      title: EmbeddedCollectionOfFault
      type: object
      properties:
        faults:
          type: array
          description: Resource collection
          items:
            $ref: '#/components/schemas/Fault'
      description: Embedded collection of Fault
      xml:
        name: content
        wrapped: true
      discriminator:
        propertyName: Embedded collection of Fault
    Fault:
      title: Fault
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        severityLabel:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - UNKNOWN
        source:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
    ResourceOfFault:
      title: ResourceOfFault
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        links:
          type: array
          xml:
            name: link
            namespace: http://www.w3.org/2005/Atom
            attribute: false
            wrapped: false
          items:
            $ref: '#/components/schemas/Link'
        name:
          type: string
        severityLabel:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - UNKNOWN
        source:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
      xml:
        name: ResourceOfFault
        attribute: false
        wrapped: false
    ResourcesOfFault:
      title: ResourcesOfFault
      required:
      - _embedded
      - _links
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/EmbeddedCollectionOfFault'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: Link collection
      description: Resources of Fault
      xml:
        name: entities
        attribute: false
        wrapped: false
      discriminator:
        propertyName: Resources of Fault
    EmbeddedCollectionOfLibraryComponent:
      title: EmbeddedCollectionOfLibraryComponent
      required:
      - components
      type: object
      properties:
        components:
          type: array
          description: Resource collection
          items:
            $ref: '#/components/schemas/LibraryComponent'
      description: Embedded collection of LibraryComponent
      xml:
        name: content
        wrapped: true
      discriminator:
        propertyName: Embedded collection of LibraryComponent
    EmbeddedCollectionOfLibraryFault:
      title: EmbeddedCollectionOfLibraryFault
      required:
      - faults
      type: object
      properties:
        faults:
          type: array
          description: Resource collection
          items:
            $ref: '#/components/schemas/LibraryFault'
      description: Embedded collection of LibraryFault
      xml:
        name: content
        wrapped: true
      discriminator:
        propertyName: Embedded collection of LibraryFault
    LibraryComponent:
      title: LibraryComponent
      type: object
      properties:
        componentLibraryName:
          type: string
        description:
          type: string
        manufacturer:
          type: string
        model:
          type: string
        name:
          type: string
    LibraryFault:
      title: LibraryFault
      type: object
      properties:
        additionalDetails:
          type: string
        componentLibraryName:
          type: string
        errorCode:
          type: string
        remediation:
          type: string
        systemReaction:
          type: string
    ResourceOfLibraryComponent:
      title: ResourceOfLibraryComponent
      type: object
      properties:
        componentLibraryName:
          type: string
        description:
          type: string
        links:
          type: array
          xml:
            name: link
            namespace: http://www.w3.org/2005/Atom
            attribute: false
            wrapped: false
          items:
            $ref: '#/components/schemas/Link'
        manufacturer:
          type: string
        model:
          type: string
        name:
          type: string
      xml:
        name: ResourceOfLibraryComponent
        attribute: false
        wrapped: false
    ResourcesOfLibraryComponent:
      title: ResourcesOfLibraryComponent
      required:
      - _embedded
      - _links
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/EmbeddedCollectionOfLibraryComponent'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: Link collection
      description: Resources of LibraryComponent
      xml:
        name: entities
        attribute: false
        wrapped: false
      discriminator:
        propertyName: Resources of LibraryComponent
    ResourcesOfLibraryFault:
      title: ResourcesOfLibraryFault
      required:
      - _embedded
      - _links
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/EmbeddedCollectionOfLibraryFault'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: Link collection
      description: Resources of LibraryFault
      xml:
        name: entities
        attribute: false
        wrapped: false
      discriminator:
        propertyName: Resources of LibraryFault
    ComponentStateChartDataPoint:
      title: ComponentStateChartDataPoint
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/ComponentStateDataPointPayload'
        timestamp:
          type: string
          format: date-time
    ComponentStateDataPointPayload:
      title: ComponentStateDataPointPayload
      type: object
      properties:
        numberOfFaultedComponents:
          type: integer
          format: int64
        numberOfOfflineComponents:
          type: integer
          format: int64
        numberOfOnlineComponents:
          type: integer
          format: int64
        numberOfStartingUpComponents:
          type: integer
          format: int64
        numberOfUnavailableComponents:
          type: integer
          format: int64
    TimeValueChart:
      title: TimeValueChart
      type: object
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/TimeValuePoint'
        scale:
          type: string
          enum:
          - SECONDS
          - MINUTES
          - HOURS
          - DAYS
          - PERCENT
    TimeValuePoint:
      title: TimeValuePoint
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
          format: double
